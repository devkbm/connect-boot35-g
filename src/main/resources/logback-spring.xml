<?xml version="1.0" encoding="UTF-8"?>
<configuration>

	<property name="LOG_PATH" value="/var/log/application"/> 
		
	<!-- 콘솔 로그 출력 --> 
	<appender name="TEXT_CONSOLE" class="ch.qos.logback.core.ConsoleAppender"> 
		<encoder> 
			<charset>UTF-8</charset> 
			<Pattern>%d %-4relative [%thread] %-5level %logger{35} - %msg%n</Pattern> 
		</encoder> 
	</appender> 
		
	<!-- Logstash JSON 형식으로 파일 로그 생성 --> 
	<!-- /var/log/applicaion/log.json 파일에 최신 로그 생성 --> 
	<!-- /var/log/applicaion/log_2016-07-15.0.json 파일에 과거 로그 보관 --> 
	<!-- 5MB 초과, 날짜 변경 시점마다 생성, 생성된지 3일 이상된 파일은 삭제 --> 
	<!-- <appender name="JSON_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender"> 
		<File>${LOG_PATH}/log.json</File> 
		<encoder class="net.logstash.logback.encoder.LogstashEncoder"> 
			<jsonGeneratorDecorator class="com.jsonobject.example.logback.PrettyPrintingDecorator"/> 
			<jsonFactoryDecorator class="com.jsonobject.example.logback.ISO8601DateDecorator"/> 
		</encoder> 
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
			<FileNamePattern>${LOG_PATH}/log_%d{yyyy-MM-dd}.%i.json</FileNamePattern> 
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"> 
				<maxFileSize>5MB</maxFileSize> 
			</timeBasedFileNamingAndTriggeringPolicy> 
			<maxHistory>3</maxHistory> 
		</rollingPolicy> 
	</appender>  -->
	
	<!-- INFO 레벨 이하 로그를 콘솔 및 파일로 출력 --> 
	<root level="INFO"> 
		<appender-ref ref="TEXT_CONSOLE"/> 
	</root>
	
	<logger name="jdbc" level="OFF"/>
  
  	<!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. -->
  	<logger name="jdbc.sqlonly" level="OFF" additivity="false">>
    	<appender-ref ref="TEXT_CONSOLE" />
  	</logger>  
  	
  	<!--  SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
  	<logger name="jdbc.sqltiming" level="DEBUG" additivity="false">>  	 	
    	<appender-ref ref="TEXT_CONSOLE" />
  	</logger>
  	
  	<!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
  	<logger name="jdbc.audit" level="OFF" additivity="false">>
    	<appender-ref ref="TEXT_CONSOLE" />
  	</logger>
  	
  	<!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. -->
  	<logger name="jdbc.resultset" level="OFF" additivity="false">>
    	<appender-ref ref="TEXT_CONSOLE" />
  	</logger>
  	
  	<!-- SQL 결과 조회된 데이터의 table을 로그로 남긴다. -->
  	<logger name="jdbc.resultsettable" level="OFF" additivity="false">> 
    	<appender-ref ref="TEXT_CONSOLE" />
  	</logger>
  	
  	<logger name="jdbc.connection" level="OFF" additivity="false">> 
    	<appender-ref ref="TEXT_CONSOLE" />
  	</logger>  
    
</configuration>