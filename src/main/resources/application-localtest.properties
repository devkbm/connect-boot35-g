# P6SPY LOG
decorator.datasource.p6spy.enable-logging=true
# spring jdbc session 안나오게 하려고함
decorator.datasource.p6spy.logging=custom
decorator.datasource.p6spy.custom-appender-class=com.like.core.p6spylog.P6spyCustomSlf4JLogger

# H2 CONSOLE URL - http://localhost:8090/h2
spring.h2.console.enabled=true
spring.h2.console.path=/h2

# H2
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:test;
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database=h2
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.sql.init.encoding=UTF-8
spring.sql.init.mode=embedded
spring.sql.init.schema-locations=classpath:db/h2/schema-dev-system.sql,classpath:db/h2/schema-dev-hrm.sql,classpath:db/h2/schema-dev-grw.sql
spring.sql.init.data-locations=classpath:db/h2/data-dev-system.sql,classpath:db/h2/data-dev-hrm.sql
mybatis.configuration.database-id=h2

# ORACLE CLOUD
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@orcl23ai_high?TNS_ADMIN=./src/main/resources/db/oracle/Wallet_ORCL23AI/
##spring.datasource.url=jdbc:oracle:thin:@orcl23ai_high?TNS_ADMIN=./Wallet_ORCL23AI/
#spring.datasource.username=admin
#spring.datasource.password=Qwer1234!@#$
#spring.datasource.hikari.maximum-pool-size=20
#spring.jpa.database-platform=org.hibernate.dialect.OracleDialect
#spring.jpa.database=oracle
 
#mybatis.configuration.database-id=oracle

# TEST ONLY - https://pravusid.kr/java/2018/10/10/spring-database-initialization.html
# spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Seoul

#spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=none 
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate=info
logging.level.org.hibernate.type.descriptor.sql=trace
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace

#Envers 
# audit 테이블의 뒤에 붙일 이름을 설정할 수 있다. default 는 _aud 이다.
spring.jpa.properties.org.hibernate.envers.audit_table_suffix=_HISTORY 
# audit 테이블의 revinfo와의 관계컬럼명을 설정한다. default는 rev 이다.
spring.jpa.properties.org.hibernate.envers.revision_field_name=REV_ID
# audit 테이블의 revison 타입 컬럼명을 설정한다. default는 revtype 이다.
spring.jpa.properties.org.hibernate.envers.revision_type_field_name=REV_TYPE 
# 삭제될때 삭제 이전의 데이터를 기록한다. default는 false이고 PK 값과 rev, revtype 값만 기록한다.
spring.jpa.properties.org.hibernate.envers.store_data_at_delete=true 
org.hibernate.envers.store_data_at_delete=true
spring.jpa.properties.org.hibernate.envers.do_not_audit_optimistic_locking_field=false
#spring.jpa.properties.org.hibernate.envers.audit_table_prefix : audit 테이블의 앞에 붙일 이름을 설정할 수 있다.


##############################################################################################################################################
# File Upload
##############################################################################################################################################
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.mvc.static-path-pattern=/static/**

# windows
spring.web.resources.static-locations=file:///c:/temp/
#file-server.web-static-location=c:\\temp
file-server.location=c:\\temp2
file-server.client-download-url=https://localhost:8090/api/system/file/
user-image.uploadPath=c:\\temp2
board.location=c:\\temp
board.client-download-url=https://localhost:8090/api/grw/board/post/file/



##############################################################################################################################################
# Oauth2
##############################################################################################################################################
client.oauth2.redirect-url=https://localhost:4200/oauth2/

# Google OAuth2
# https://console.cloud.google.com/auth/clients/497322312042-mstkseqfmr5t8r7nch5bp17r9lh5eoen.apps.googleusercontent.com?inv=1&invt=Ab2QNA&project=our-ratio-105505
spring.security.oauth2.client.registration.google.client-id=497322312042-mstkseqfmr5t8r7nch5bp17r9lh5eoen.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=hTtYeufM0x4A1iKMhXOEcK65
spring.security.oauth2.client.registration.google.scope = profile,email,https://www.googleapis.com/auth/calendar.readonly,https://www.googleapis.com/auth/calendar,https://www.googleapis.com/auth/calendar.events.readonly,https://www.googleapis.com/auth/calendar.events
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.redirect-uri=https://localhost:8090/login/oauth2/code/google


# Kakao OAuth2
# https://developers.kakao.com/console/app/595498
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.client-id=da6784478a5c643d977ab927826ac120
spring.security.oauth2.client.registration.kakao.client-secret=VOi7ZoaWw9xGCE6y7eOdTE7f7SHRephr
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.redirect-uri=https://localhost:8090/login/oauth2/code/kakao

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# Naver OAuth2
# https://developers.naver.com/apps/#/myapps/3_QOVUP5wmpNYSq2buqc/config
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=3_QOVUP5wmpNYSq2buqc
spring.security.oauth2.client.registration.naver.client-secret=uWMxhYTcy6
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=https://localhost:8090/login/oauth2/code/naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

